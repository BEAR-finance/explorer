# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idcontainer
name: Build pipeline

on:
  push:
  pull_request:
    types: [opened]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: checkout with LFS
        uses: actions/checkout@master
        with:
          lfs: true

      - name: Archive code
        uses: actions/upload-artifact@v2
        with:
          name: checkout
          path: |
            ${{ github.workspace }}
  test-unity:
    runs-on: ubuntu-latest
    container:
      image: decentraland/renderer-build:2019.4
      env:
        BUILD_TARGET: WebGL
        BUILD_PATH: ${{ github.workspace }}/unity-client/Builds/unity
        BUILD_NAME: unity
    needs: [checkout]
    steps:
      - name: Download code
        uses: actions/download-artifact@v2
        with:
          name: checkout

      - name: Get the hash of source files
        run: find Assets -type f \( -not -path '*Plugins*' \) \( -iname \*.unity -o -iname \*.cs -o -iname \*.meta -o -iname \*.xml -o -iname \*.shader -o -iname \*.prefab -o -iname \*.yml -o -iname \*.mat -o -iname \*.json -o -iname \*.js -o -iname \*.jspre  -o -iname \*.jslib  -o -iname \*.hlsl  -o -iname \*.asmdef  -o -iname \*.csproj  -o -iname \*.spriteatlas  \) \( -exec md5sum "$PWD"/{} \; \) | sort > ../.unitysources-checksum
      # - restore_cache:
      #     name: Restore test results if they exist
      #     keys:
      #       - unity-tests-{{ checksum "../.unitysources-checksum" }}
      # - restore_cache:
      #     name: Restore library if exists
      #     keys:
      #       - library-{{ .Branch }}
      - name: run tests
        timeout-minutes: 30
        run: |
          if [[ -e ${{ github.workspace }}/unity-client/testlog/log.txt ]]; then
              exit 0
          else
              bash before-ci.sh
              bash test-ci.sh
              exit $?
          fi;
      # - save_cache:
      #     name: Store test results
      #     key: unity-tests-{{ checksum "../.unitysources-checksum" }}
      #     paths:
      #       - ${{ github.workspace }}/unity-client/testlog/log.txt
      #       - ${{ github.workspace }}/unity-client/TestResources/VisualTests/CurrentTestImages/*.png
      # - store_artifacts:
      #     name: Store tests result as artifacts
      #     path: ${{ github.workspace }}/unity-client/testlog
      # - store_artifacts:
      #     name: Store visual tests result as artifacts
      #     path: ${{ github.workspace }}/unity-client/TestResources/VisualTests/CurrentTestImages
  build-unity:
    runs-on: ubuntu-latest
    container:
      image: decentraland/renderer-build:2019.4
      env:
        BUILD_TARGET: WebGL
        BUILD_PATH: ${{ github.workspace }}/unity-client/Builds/unity
        BUILD_NAME: unity
    needs: [checkout]
    steps:
      - name: Download code
        uses: actions/download-artifact@v2
        with:
          name: checkout
      # - restore_cache:
      #     name: Restore test results if they exist
      #     keys:
      #       - unity-tests-{{ checksum "../.unitysources-checksum" }}
      # - restore_cache:
      #     name: Restore library if exists
      #     keys:
      #       - library-{{ .Branch }}
      - name: build decentraland-renderer
        timeout-minutes: 30
        run: |
          if [[ ! -e ${BUILD_PATH} ]] || [[ ! -n "$(ls -A ${BUILD_PATH})" ]]; then
              mkdir -p ${BUILD_PATH}
              bash before-ci.sh
              (./build-ci.sh & echo $! > ${{ github.workspace }}/build.pid &)
              pid=`cat ${{ github.workspace }}/build.pid`
              while [ -e /proc/$pid -a /proc/$pid/exe ]; do
                  echo "Running Unity Build..."
                  sleep 60
              done
          fi;
      # - save_cache:
      #     name: Store decentraland-renderer build
      #     key: unity-build-{{ checksum "../.unitysources-checksum" }}
      #     paths:
      #       - ${{ github.workspace }}/unity-client/Builds/
      # - save_cache:
      #     name: Store library
      #     key: library-{{ .Branch }}-{{ epoch }}
      #     paths:
      #       - ${{ github.workspace }}/unity-client/Library
      # - store_artifacts:
      #     name: Store logs
      #     path: /tmp/buildlog.txt

      # # persist to workspace to use in downstream jobs
      # - persist_to_workspace:
      #     root: *workspace_root
      #     paths:
      #       - unity-client/Builds/unity/Build
